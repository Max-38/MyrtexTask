{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EmployeeService } from './employee.service';\nimport { Employee } from './Employee';\nimport { Subject } from 'rxjs';\nlet EmployeesComponent = class EmployeesComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.employee = new Employee();\n    this.employees = [];\n    this.dtOptions = {};\n    this.dtTrigger = new Subject();\n    this.rowSelection = 'single';\n  }\n  ngOnInit() {\n    this.dtOptions = {\n      pagingType: 'full_numbers'\n    };\n    this.loadEmployees();\n  }\n  loadEmployees() {\n    this.employeeService.getEmployees().subscribe(data => {\n      this.employees = data;\n      this.dtTrigger.next(null);\n    });\n  }\n  save() {\n    if (this.employee.id == null) {\n      this.employeeService.createEmployee(this.employee).subscribe(data => this.employees.push(data));\n    } else {\n      this.employeeService.updateEmployee(this.employee);\n    }\n    this.cancel();\n  }\n  delete(p) {\n    this.employeeService.deleteEmployee(p.id).subscribe(() => this.employeeService.getEmployees().subscribe(data => {\n      this.employees = data;\n    }));\n    this.cancel();\n  }\n  editEmployee(p) {\n    this.employee = p;\n  }\n  add() {\n    this.cancel();\n  }\n  cancel() {\n    this.employee = new Employee();\n  }\n};\nEmployeesComponent = __decorate([Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  providers: [EmployeeService]\n})], EmployeesComponent);\nexport { EmployeesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,QAAQ,QAAQ,YAAY;AACrC,SAASC,OAAO,QAAQ,MAAM;AAOvB,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAQ7BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IANnC,aAAQ,GAAa,IAAIJ,QAAQ,EAAE;IACnC,cAAS,GAAe,EAAE;IAC1B,cAAS,GAAwB,EAAE;IACnC,cAAS,GAAiB,IAAIC,OAAO,EAAO;IAC5C,iBAAY,GAA0B,QAAQ;EAEU;EAExDI,QAAQ;IACN,IAAI,CAACC,SAAS,GAAG;MACfC,UAAU,EAAE;KAAe;IAC7B,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACJ,eAAe,CAACK,YAAY,EAAE,CAChCC,SAAS,CAACC,IAAI,IAAG;MAChB,IAAI,CAACC,SAAS,GAAGD,IAAI;MACrB,IAAI,CAACE,SAAS,CAACC,IAAI,CAAC,IAAI,CAAC;IAC3B,CAAC,CAAC;EACN;EAEAC,IAAI;IACF,IAAI,IAAI,CAACC,QAAQ,CAACC,EAAE,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACb,eAAe,CAACc,cAAc,CAAC,IAAI,CAACF,QAAQ,CAAC,CAC/CN,SAAS,CAAEC,IAAc,IAAK,IAAI,CAACC,SAAS,CAACO,IAAI,CAACR,IAAI,CAAC,CAAC;KAC5D,MAAM;MACL,IAAI,CAACP,eAAe,CAACgB,cAAc,CAAC,IAAI,CAACJ,QAAQ,CAAC;;IAGpD,IAAI,CAACK,MAAM,EAAE;EAEf;EAEAC,MAAM,CAACC,CAAW;IAChB,IAAI,CAACnB,eAAe,CAACoB,cAAc,CAACD,CAAC,CAACN,EAAE,CAAC,CACtCP,SAAS,CAAC,MAAM,IAAI,CAACN,eAAe,CAACK,YAAY,EAAE,CACjDC,SAAS,CAACC,IAAI,IAAG;MAAG,IAAI,CAACC,SAAS,GAAGD,IAAI;IAAA,CAAC,CAAC,CAAC;IAEjD,IAAI,CAACU,MAAM,EAAE;EACf;EAEAI,YAAY,CAACF,CAAW;IACtB,IAAI,CAACP,QAAQ,GAAGO,CAAC;EAEnB;EAEAG,GAAG;IACD,IAAI,CAACL,MAAM,EAAE;EACf;EAEAA,MAAM;IACJ,IAAI,CAACL,QAAQ,GAAG,IAAIhB,QAAQ,EAAE;EAChC;CACD;AAxDYE,kBAAkB,eAL9BJ,SAAS,CAAC;EACT6B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC9B,eAAe;CAC5B,CAAC,GACWG,kBAAkB,CAwD9B;SAxDYA,kBAAkB","names":["Component","EmployeeService","Employee","Subject","EmployeesComponent","constructor","employeeService","ngOnInit","dtOptions","pagingType","loadEmployees","getEmployees","subscribe","data","employees","dtTrigger","next","save","employee","id","createEmployee","push","updateEmployee","cancel","delete","p","deleteEmployee","editEmployee","add","selector","templateUrl","providers"],"sourceRoot":"","sources":["C:\\Users\\Ryadn\\source\\repos\\MyrtexTask\\Presentation\\MyrtexTask.Web\\ClientApp\\src\\app\\employees\\employees.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from './employee.service';\r\nimport { Employee } from './Employee';\r\nimport { Subject } from 'rxjs'; \r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  templateUrl: './employees.component.html',\r\n  providers: [EmployeeService]\r\n})\r\nexport class EmployeesComponent implements OnInit{\r\n\r\n  employee: Employee = new Employee();\r\n  employees: Employee[] = [];\r\n  dtOptions: DataTables.Settings = {};\r\n  dtTrigger: Subject<any> = new Subject<any>();\r\n  rowSelection: 'single' | 'multiple' = 'single'\r\n\r\n  constructor(private employeeService: EmployeeService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.dtOptions = {\r\n      pagingType: 'full_numbers'};\r\n    this.loadEmployees();\r\n  }\r\n\r\n  loadEmployees() {\r\n    this.employeeService.getEmployees()\r\n      .subscribe(data => {\r\n        this.employees = data;\r\n        this.dtTrigger.next(null);\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (this.employee.id == null) {\r\n      this.employeeService.createEmployee(this.employee)\r\n        .subscribe((data: Employee) => this.employees.push(data));\r\n    } else {\r\n      this.employeeService.updateEmployee(this.employee)\r\n\r\n    }\r\n    this.cancel();\r\n\r\n  }\r\n\r\n  delete(p: Employee) {\r\n    this.employeeService.deleteEmployee(p.id)\r\n      .subscribe(() => this.employeeService.getEmployees()\r\n        .subscribe(data => { this.employees = data}));\r\n\r\n    this.cancel()\r\n  }\r\n\r\n  editEmployee(p: Employee) {\r\n    this.employee = p;\r\n    \r\n  }\r\n\r\n  add() {\r\n    this.cancel();\r\n  }\r\n\r\n  cancel() {\r\n    this.employee = new Employee();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}