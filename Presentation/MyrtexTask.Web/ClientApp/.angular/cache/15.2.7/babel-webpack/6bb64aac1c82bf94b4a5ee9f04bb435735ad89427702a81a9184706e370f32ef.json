{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EmployeeService } from './employee.service';\nimport { Employee } from './Employee';\nlet EmployeesComponent = class EmployeesComponent {\n  constructor(employeeService) {\n    this.employeeService = employeeService;\n    this.employee = new Employee();\n    this.employees = [];\n  }\n  ngOnInit() {\n    this.loadEmployees();\n  }\n  loadEmployees() {\n    this.employeeService.getEmployees().subscribe(data => this.employees = data);\n  }\n  save() {\n    if (this.employee.id == null) {\n      this.employeeService.createEmployee(this.employee).subscribe(data => this.employees.push(data));\n    } else {\n      this.employeeService.updateEmployee(this.employee).subscribe(data => this.loadEmployees);\n    }\n    this.cancel;\n  }\n  delete(p) {\n    this.employeeService.deleteEmployee(p.id).subscribe(data => this.loadEmployees());\n  }\n  editEmployee(p) {\n    this.employee = p;\n  }\n  add() {\n    this.cancel;\n  }\n  cancel() {\n    this.employee = new Employee();\n  }\n};\nEmployeesComponent = __decorate([Component({\n  selector: 'app-employees',\n  templateUrl: './employees.component.html',\n  providers: [EmployeeService]\n})], EmployeesComponent);\nexport { EmployeesComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAwB,eAAe;AAGzD,SAASC,eAAe,QAAQ,oBAAoB;AACpD,SAASC,QAAQ,QAAQ,YAAY;AAO9B,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAK7BC,YAAoBC,eAAgC;IAAhC,oBAAe,GAAfA,eAAe;IAHnC,aAAQ,GAAa,IAAIH,QAAQ,EAAE;IACnC,cAAS,GAAe,EAAE;EAE8B;EAExDI,QAAQ;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAA,aAAa;IACX,IAAI,CAACF,eAAe,CAACG,YAAY,EAAE,CAChCC,SAAS,CAAEC,IAAgB,IAAK,IAAI,CAACC,SAAS,GAAGD,IAAI,CAAC;EAC3D;EAEAE,IAAI;IACF,IAAI,IAAI,CAACC,QAAQ,CAACC,EAAE,IAAI,IAAI,EAAE;MAC5B,IAAI,CAACT,eAAe,CAACU,cAAc,CAAC,IAAI,CAACF,QAAQ,CAAC,CAC/CJ,SAAS,CAAEC,IAAc,IAAK,IAAI,CAACC,SAAS,CAACK,IAAI,CAACN,IAAI,CAAC,CAAC;KAC5D,MAAM;MACL,IAAI,CAACL,eAAe,CAACY,cAAc,CAAC,IAAI,CAACJ,QAAQ,CAAC,CAC/CJ,SAAS,CAACC,IAAI,IAAI,IAAI,CAACH,aAAa,CAAC;;IAE1C,IAAI,CAACW,MAAM;EACb;EAEAC,MAAM,CAACC,CAAW;IAChB,IAAI,CAACf,eAAe,CAACgB,cAAc,CAACD,CAAC,CAACN,EAAE,CAAC,CACtCL,SAAS,CAACC,IAAI,IAAI,IAAI,CAACH,aAAa,EAAE,CAAC;EAC5C;EAEAe,YAAY,CAACF,CAAW;IACtB,IAAI,CAACP,QAAQ,GAAGO,CAAC;EACnB;EAEAG,GAAG;IACD,IAAI,CAACL,MAAM;EACb;EAEAA,MAAM;IACJ,IAAI,CAACL,QAAQ,GAAG,IAAIX,QAAQ,EAAE;EAChC;CACD;AA3CYC,kBAAkB,eAL9BH,SAAS,CAAC;EACTwB,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAACzB,eAAe;CAC5B,CAAC,GACWE,kBAAkB,CA2C9B;SA3CYA,kBAAkB","names":["Component","EmployeeService","Employee","EmployeesComponent","constructor","employeeService","ngOnInit","loadEmployees","getEmployees","subscribe","data","employees","save","employee","id","createEmployee","push","updateEmployee","cancel","delete","p","deleteEmployee","editEmployee","add","selector","templateUrl","providers"],"sourceRoot":"","sources":["C:\\Users\\Ryadn\\source\\repos\\MyrtexTask\\Presentation\\MyrtexTask.Web\\ClientApp\\src\\app\\employees\\employees.component.ts"],"sourcesContent":["import { Component, Inject, OnInit } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { EmployeeService } from './employee.service';\r\nimport { Employee } from './Employee';\r\n\r\n@Component({\r\n  selector: 'app-employees',\r\n  templateUrl: './employees.component.html',\r\n  providers: [EmployeeService]\r\n})\r\nexport class EmployeesComponent implements OnInit{\r\n\r\n  employee: Employee = new Employee();\r\n  employees: Employee[] = [];\r\n\r\n  constructor(private employeeService: EmployeeService) { }\r\n\r\n  ngOnInit() {\r\n    this.loadEmployees();\r\n  }\r\n\r\n  loadEmployees() {\r\n    this.employeeService.getEmployees()\r\n      .subscribe((data: Employee[]) => this.employees = data);\r\n  }\r\n\r\n  save() {\r\n    if (this.employee.id == null) {\r\n      this.employeeService.createEmployee(this.employee)\r\n        .subscribe((data: Employee) => this.employees.push(data));\r\n    } else {\r\n      this.employeeService.updateEmployee(this.employee)\r\n        .subscribe(data => this.loadEmployees);\r\n    }\r\n    this.cancel\r\n  }\r\n\r\n  delete(p: Employee) {\r\n    this.employeeService.deleteEmployee(p.id)\r\n      .subscribe(data => this.loadEmployees())\r\n  }\r\n\r\n  editEmployee(p: Employee) {\r\n    this.employee = p;\r\n  }\r\n\r\n  add() {\r\n    this.cancel;\r\n  }\r\n\r\n  cancel() {\r\n    this.employee = new Employee();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}