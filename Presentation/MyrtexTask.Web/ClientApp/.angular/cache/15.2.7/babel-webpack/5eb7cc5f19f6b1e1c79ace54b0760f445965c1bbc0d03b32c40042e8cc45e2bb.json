{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@angular/core';\nlet EmployeeService = class EmployeeService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'BASE URL' + 'employee';\n  }\n  getEmployees() {\n    return this.http.get(this.url);\n  }\n  createEmployee(employee) {\n    return this.http.post(this.url, employee);\n  }\n  updateEmployee(employee) {\n    return this.http.put(this.url, employee);\n  }\n  deleteEmployee(id) {\n    return this.http.delete(this.url + \"/\" + id);\n  }\n};\nEmployeeService = __decorate([Injectable], EmployeeService);\nexport { EmployeeService };","map":{"version":3,"mappings":";AAAA,SAASA,UAAU,QAAQ,eAAe;AAMnC,IAAMC,eAAe,GAArB,MAAMA,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IADhB,QAAG,GAAG,UAAU,GAAG,UAAU;EAGrC;EAEAC,YAAY;IACV,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,IAAI,CAACC,GAAG,CAAC;EAC5C;EAEAC,cAAc,CAACC,QAAkB;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,IAAI,CAACH,GAAG,EAAEE,QAAQ,CAAC;EAC3C;EAEAE,cAAc,CAACF,QAAkB;IAC/B,OAAO,IAAI,CAACL,IAAI,CAACQ,GAAG,CAAC,IAAI,CAACL,GAAG,EAAEE,QAAQ,CAAC;EAC1C;EAEAI,cAAc,CAACC,EAAW;IACxB,OAAO,IAAI,CAACV,IAAI,CAACW,MAAM,CAAC,IAAI,CAACR,GAAG,GAAG,GAAG,GAAGO,EAAE,CAAC;EAC9C;CACD;AAtBYZ,eAAe,eAD3BD,UAAU,GACEC,eAAe,CAsB3B;SAtBYA,eAAe","names":["Injectable","EmployeeService","constructor","http","getEmployees","get","url","createEmployee","employee","post","updateEmployee","put","deleteEmployee","id","delete"],"sourceRoot":"","sources":["C:\\Users\\Ryadn\\source\\repos\\MyrtexTask\\Presentation\\MyrtexTask.Web\\ClientApp\\src\\app\\employees\\employee.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { DecimalPipe } from '@angular/common';\r\nimport { Employee } from './Employee';\r\n\r\n@Injectable\r\nexport class EmployeeService {\r\n\r\n  private url = 'BASE URL' + 'employee'\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  getEmployees() {\r\n    return this.http.get<Employee[]>(this.url)\r\n  }\r\n\r\n  createEmployee(employee: Employee) {\r\n    return this.http.post(this.url, employee);\r\n  }\r\n\r\n  updateEmployee(employee: Employee) {\r\n    return this.http.put(this.url, employee);\r\n  }\r\n\r\n  deleteEmployee(id?: number) {\r\n    return this.http.delete(this.url + \"/\" + id);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}